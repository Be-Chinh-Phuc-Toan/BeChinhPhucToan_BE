// <auto-generated />
using System;
using BeChinhPhucToan_BE.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BeChinhPhucToan_BE.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.Administrator", b =>
                {
                    b.Property<string>("email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("fullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("email");

                    b.HasIndex("phoneNumber")
                        .IsUnique();

                    b.ToTable("Administrators");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.Badge", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("Badges");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.Chapter", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("courseID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("courseID");

                    b.ToTable("Chapters");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.Comment", b =>
                {
                    b.Property<int>("studentID")
                        .HasColumnType("int");

                    b.Property<int>("exerciseID")
                        .HasColumnType("int");

                    b.Property<int?>("Excerciseid")
                        .HasColumnType("int");

                    b.Property<string>("comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("studentID", "exerciseID");

                    b.HasIndex("Excerciseid");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.Course", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("grade")
                        .HasColumnType("int");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.Excercise", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("lessonID")
                        .HasColumnType("int");

                    b.Property<string>("question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("lessonID");

                    b.ToTable("Excercises");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.Feedback", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ratting")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("userPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.HasIndex("userPhone");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.Goal", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("studentID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("studentID");

                    b.ToTable("Goals");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.GroupChat", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("GroupChats");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.JoinGroup", b =>
                {
                    b.Property<int>("groupID")
                        .HasColumnType("int");

                    b.Property<int>("studentID")
                        .HasColumnType("int");

                    b.Property<int?>("GroupChatid")
                        .HasColumnType("int");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("joinedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("leftDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("groupID", "studentID");

                    b.HasIndex("GroupChatid");

                    b.HasIndex("studentID");

                    b.ToTable("JoinGroup");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.Lesson", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("chapterID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("chapterID");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.Message", b =>
                {
                    b.Property<int>("groupID")
                        .HasColumnType("int");

                    b.Property<int>("studentID")
                        .HasColumnType("int");

                    b.Property<int?>("GroupChatid")
                        .HasColumnType("int");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("sentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("groupID", "studentID");

                    b.HasIndex("GroupChatid");

                    b.HasIndex("studentID");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.NotifyParent", b =>
                {
                    b.Property<string>("parentEmail")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("notificationID")
                        .HasColumnType("int");

                    b.Property<int?>("ParentNotificationid")
                        .HasColumnType("int");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("parentEmail", "notificationID");

                    b.HasIndex("ParentNotificationid");

                    b.ToTable("NotifyParent");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.NotifyStudent", b =>
                {
                    b.Property<int>("studentID")
                        .HasColumnType("int");

                    b.Property<int>("notificationID")
                        .HasColumnType("int");

                    b.Property<int?>("ParentNotificationid")
                        .HasColumnType("int");

                    b.Property<int?>("StudentNotificationid")
                        .HasColumnType("int");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("studentID", "notificationID");

                    b.HasIndex("ParentNotificationid");

                    b.HasIndex("StudentNotificationid");

                    b.ToTable("NotifyStudent");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.Parent", b =>
                {
                    b.Property<string>("email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("fullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("guardian")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("email");

                    b.HasIndex("phoneNumber")
                        .IsUnique();

                    b.ToTable("Parents");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.ParentNotification", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isRead")
                        .HasColumnType("bit");

                    b.Property<string>("message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("ParentNotifications");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.Purchase", b =>
                {
                    b.Property<int>("badgeID")
                        .HasColumnType("int");

                    b.Property<int>("studentID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("badgeID", "studentID");

                    b.HasIndex("studentID");

                    b.ToTable("Purchase");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.RankedScore", b =>
                {
                    b.Property<int>("studentID")
                        .HasColumnType("int");

                    b.Property<int>("rateTypeID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<float>("score")
                        .HasColumnType("real");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("studentID", "rateTypeID");

                    b.HasIndex("rateTypeID");

                    b.ToTable("RankedScores");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.RankedTest", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("grade")
                        .HasColumnType("int");

                    b.Property<string>("question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("rateTypeID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("rateTypeID");

                    b.ToTable("RankedTests");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.RateType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("RateTypes");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.Reward", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("point")
                        .HasColumnType("float");

                    b.Property<int>("studentID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("studentID");

                    b.ToTable("Rewards");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.Setting", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("studentID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("volume")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("studentID")
                        .IsUnique();

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.StarPoint", b =>
                {
                    b.Property<int>("studentID")
                        .HasColumnType("int");

                    b.Property<int>("lessonID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("star")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("studentID", "lessonID");

                    b.HasIndex("lessonID");

                    b.ToTable("StarPoints");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.Student", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("dateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("fullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("grade")
                        .HasColumnType("int");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("parentEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("parentEmail");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.StudentNotification", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isRead")
                        .HasColumnType("bit");

                    b.Property<string>("message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("StudentNotifications");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.Test", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("grade")
                        .HasColumnType("int");

                    b.Property<string>("question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.User", b =>
                {
                    b.Property<string>("phoneNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isVerify")
                        .HasColumnType("bit");

                    b.Property<string>("otpCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("otpExpiration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("phoneNumber");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.Administrator", b =>
                {
                    b.HasOne("BeChinhPhucToan_BE.Models.User", "User")
                        .WithOne("Administrator")
                        .HasForeignKey("BeChinhPhucToan_BE.Models.Administrator", "phoneNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.Chapter", b =>
                {
                    b.HasOne("BeChinhPhucToan_BE.Models.Course", "Course")
                        .WithMany("Chapters")
                        .HasForeignKey("courseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.Comment", b =>
                {
                    b.HasOne("BeChinhPhucToan_BE.Models.Excercise", "Excercise")
                        .WithMany("Comments")
                        .HasForeignKey("Excerciseid");

                    b.HasOne("BeChinhPhucToan_BE.Models.Student", "Student")
                        .WithMany("Comments")
                        .HasForeignKey("studentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Excercise");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.Excercise", b =>
                {
                    b.HasOne("BeChinhPhucToan_BE.Models.Lesson", "Lesson")
                        .WithMany("Excercises")
                        .HasForeignKey("lessonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.Feedback", b =>
                {
                    b.HasOne("BeChinhPhucToan_BE.Models.User", "User")
                        .WithMany("Feedbacks")
                        .HasForeignKey("userPhone")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.Goal", b =>
                {
                    b.HasOne("BeChinhPhucToan_BE.Models.Student", "Student")
                        .WithMany("Goals")
                        .HasForeignKey("studentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.JoinGroup", b =>
                {
                    b.HasOne("BeChinhPhucToan_BE.Models.GroupChat", "GroupChat")
                        .WithMany("JoinGroup")
                        .HasForeignKey("GroupChatid");

                    b.HasOne("BeChinhPhucToan_BE.Models.Student", "Student")
                        .WithMany("JoinGroup")
                        .HasForeignKey("studentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroupChat");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.Lesson", b =>
                {
                    b.HasOne("BeChinhPhucToan_BE.Models.Chapter", "Chapter")
                        .WithMany("Lessons")
                        .HasForeignKey("chapterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chapter");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.Message", b =>
                {
                    b.HasOne("BeChinhPhucToan_BE.Models.GroupChat", "GroupChat")
                        .WithMany("Messages")
                        .HasForeignKey("GroupChatid");

                    b.HasOne("BeChinhPhucToan_BE.Models.Student", "Student")
                        .WithMany("Messages")
                        .HasForeignKey("studentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroupChat");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.NotifyParent", b =>
                {
                    b.HasOne("BeChinhPhucToan_BE.Models.ParentNotification", "ParentNotification")
                        .WithMany("NotifyParents")
                        .HasForeignKey("ParentNotificationid");

                    b.HasOne("BeChinhPhucToan_BE.Models.Parent", "Parent")
                        .WithMany("NotifyParents")
                        .HasForeignKey("parentEmail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parent");

                    b.Navigation("ParentNotification");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.NotifyStudent", b =>
                {
                    b.HasOne("BeChinhPhucToan_BE.Models.ParentNotification", "ParentNotification")
                        .WithMany()
                        .HasForeignKey("ParentNotificationid");

                    b.HasOne("BeChinhPhucToan_BE.Models.StudentNotification", null)
                        .WithMany("NotifyStudent")
                        .HasForeignKey("StudentNotificationid");

                    b.HasOne("BeChinhPhucToan_BE.Models.Student", "Student")
                        .WithMany("NotifyStudent")
                        .HasForeignKey("studentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParentNotification");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.Parent", b =>
                {
                    b.HasOne("BeChinhPhucToan_BE.Models.User", "User")
                        .WithOne("Parent")
                        .HasForeignKey("BeChinhPhucToan_BE.Models.Parent", "phoneNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.Purchase", b =>
                {
                    b.HasOne("BeChinhPhucToan_BE.Models.Badge", "Badge")
                        .WithMany("Purchase")
                        .HasForeignKey("badgeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeChinhPhucToan_BE.Models.Student", "Student")
                        .WithMany("Purchase")
                        .HasForeignKey("studentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Badge");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.RankedScore", b =>
                {
                    b.HasOne("BeChinhPhucToan_BE.Models.RateType", "RateType")
                        .WithMany("RankedScores")
                        .HasForeignKey("rateTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeChinhPhucToan_BE.Models.Student", "Student")
                        .WithMany("RankedScores")
                        .HasForeignKey("studentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RateType");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.RankedTest", b =>
                {
                    b.HasOne("BeChinhPhucToan_BE.Models.RateType", "RateType")
                        .WithMany("RankedTests")
                        .HasForeignKey("rateTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RateType");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.Reward", b =>
                {
                    b.HasOne("BeChinhPhucToan_BE.Models.Student", "Student")
                        .WithMany("Rewards")
                        .HasForeignKey("studentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.Setting", b =>
                {
                    b.HasOne("BeChinhPhucToan_BE.Models.Student", "Student")
                        .WithOne("Setting")
                        .HasForeignKey("BeChinhPhucToan_BE.Models.Setting", "studentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.StarPoint", b =>
                {
                    b.HasOne("BeChinhPhucToan_BE.Models.Lesson", "Lesson")
                        .WithMany("StarPoints")
                        .HasForeignKey("lessonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeChinhPhucToan_BE.Models.Student", "Student")
                        .WithMany("StarPoints")
                        .HasForeignKey("studentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.Student", b =>
                {
                    b.HasOne("BeChinhPhucToan_BE.Models.Parent", "Parent")
                        .WithMany("Students")
                        .HasForeignKey("parentEmail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.Badge", b =>
                {
                    b.Navigation("Purchase");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.Chapter", b =>
                {
                    b.Navigation("Lessons");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.Course", b =>
                {
                    b.Navigation("Chapters");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.Excercise", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.GroupChat", b =>
                {
                    b.Navigation("JoinGroup");

                    b.Navigation("Messages");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.Lesson", b =>
                {
                    b.Navigation("Excercises");

                    b.Navigation("StarPoints");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.Parent", b =>
                {
                    b.Navigation("NotifyParents");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.ParentNotification", b =>
                {
                    b.Navigation("NotifyParents");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.RateType", b =>
                {
                    b.Navigation("RankedScores");

                    b.Navigation("RankedTests");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.Student", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Goals");

                    b.Navigation("JoinGroup");

                    b.Navigation("Messages");

                    b.Navigation("NotifyStudent");

                    b.Navigation("Purchase");

                    b.Navigation("RankedScores");

                    b.Navigation("Rewards");

                    b.Navigation("Setting");

                    b.Navigation("StarPoints");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.StudentNotification", b =>
                {
                    b.Navigation("NotifyStudent");
                });

            modelBuilder.Entity("BeChinhPhucToan_BE.Models.User", b =>
                {
                    b.Navigation("Administrator");

                    b.Navigation("Feedbacks");

                    b.Navigation("Parent");
                });
#pragma warning restore 612, 618
        }
    }
}
